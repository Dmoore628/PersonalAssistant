name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Commitlint (PR commits)
        if: github.event_name == 'pull_request'
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: commitlint.config.js
      
      - name: Enforce branch naming
        if: github.event_name == 'pull_request'
        run: |
          BRANCH="${{ github.head_ref }}"
          if ! echo "$BRANCH" | grep -E '^(feature|fix|chore|release|hotfix)\/.{3,60}$'; then
            echo "Invalid branch name: $BRANCH"; exit 1
          fi
      
      - name: Enforce PR title (Conventional Commits)
        if: github.event_name == 'pull_request'
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          if ! echo "$TITLE" | grep -E '^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .+'; then
            echo "Invalid PR title format: $TITLE"; exit 1
          fi

  build-test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -U pip
          pip install -e libs/archi_core
          pip install ruff black mypy pytest pytest-cov
      
      - name: Lint with ruff
        run: |
          ruff check .
      
      - name: Format check with black
        run: |
          black --check .
      
      - name: Type check with mypy
        run: |
          mypy libs services --ignore-missing-imports
        continue-on-error: true
      
      - name: Run tests with coverage
        run: |
          pytest --cov=libs --cov=services --cov-report=xml --cov-report=term-missing
      
      - name: Upload coverage reports
        if: github.event_name == 'pull_request'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4
      
      - name: Run security scan
        uses: securecodewarrior/github-action-add-sarif@v1
        with:
          sarif-file: 'security-scan-results.sarif'
        continue-on-error: true
      
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  containers:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Test Docker Compose build
        run: |
          cd infra && docker-compose config
          docker-compose build --no-cache
        continue-on-error: true
